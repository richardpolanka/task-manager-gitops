apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  labels:
    app: postgres-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-exporter
  template:
    metadata:
      labels:
        app: postgres-exporter
    spec:
      containers:
      - name: postgres-exporter
        image: prometheuscommunity/postgres-exporter:v0.15.0
        ports:
        - containerPort: 9187
          name: metrics
        env:
        - name: DATA_SOURCE_NAME
          value: "postgresql://taskuser:taskpass123@postgres-service:5432/taskmanager?sslmode=disable"
        - name: PG_EXPORTER_EXTEND_QUERY_PATH
          value: "/etc/postgres_exporter/queries.yaml"
        volumeMounts:
        - name: queries-config
          mountPath: /etc/postgres_exporter
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9187
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9187
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: queries-config
        configMap:
          name: postgres-exporter-queries
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter-service
  labels:
    app: postgres-exporter
    prometheus-monitor: "true"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: postgres-exporter
  ports:
  - name: metrics
    port: 9187
    targetPort: 9187
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-exporter-queries
data:
  queries.yaml: |
    # Custom queries for Task Manager database
    task_manager_stats:
      query: |
        SELECT 
          COUNT(*) as total_tasks,
          COUNT(*) FILTER (WHERE completed = true) as completed_tasks,
          COUNT(*) FILTER (WHERE completed = false) as pending_tasks,
          EXTRACT(EPOCH FROM (MAX(created_at) - MIN(created_at))) as task_timespan_seconds
        FROM tasks
      metrics:
        - total_tasks:
            usage: "GAUGE"
            description: "Total number of tasks in the database"
        - completed_tasks:
            usage: "GAUGE" 
            description: "Number of completed tasks"
        - pending_tasks:
            usage: "GAUGE"
            description: "Number of pending tasks"
        - task_timespan_seconds:
            usage: "GAUGE"
            description: "Time span between first and last task in seconds"
    
    database_size:
      query: |
        SELECT 
          pg_database_size('taskmanager') as database_size_bytes,
          (SELECT COUNT(*) FROM pg_stat_activity WHERE datname = 'taskmanager') as active_connections
      metrics:
        - database_size_bytes:
            usage: "GAUGE"
            description: "Size of taskmanager database in bytes"
        - active_connections:
            usage: "GAUGE"
            description: "Number of active connections to taskmanager database"
    
    table_stats:
      query: |
        SELECT 
          schemaname,
          tablename,
          n_tup_ins as inserts,
          n_tup_upd as updates,
          n_tup_del as deletes,
          n_live_tup as live_tuples,
          n_dead_tup as dead_tuples
        FROM pg_stat_user_tables 
        WHERE tablename = 'tasks'
      metrics:
        - inserts:
            usage: "COUNTER"
            description: "Number of rows inserted into tasks table"
        - updates:
            usage: "COUNTER" 
            description: "Number of rows updated in tasks table"
        - deletes:
            usage: "COUNTER"
            description: "Number of rows deleted from tasks table"
        - live_tuples:
            usage: "GAUGE"
            description: "Number of live tuples in tasks table"
        - dead_tuples:
            usage: "GAUGE"
            description: "Number of dead tuples in tasks table"
